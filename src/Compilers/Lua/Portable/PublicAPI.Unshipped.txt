#nullable enable
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.AddValues(params Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax![]! items) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.EqualsToken.get -> Loretta.CodeAnalysis.SyntaxToken
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.Update(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!> variables, Loretta.CodeAnalysis.SyntaxToken equalsToken, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.Values.get -> Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!>
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.WithEqualsToken(Loretta.CodeAnalysis.SyntaxToken equalsToken) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.WithValues(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.AddValues(params Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax![]! items) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.EqualsToken.get -> Loretta.CodeAnalysis.SyntaxToken
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.Update(Loretta.CodeAnalysis.SyntaxToken localKeyword, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names, Loretta.CodeAnalysis.SyntaxToken equalsToken, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.Values.get -> Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!>
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.WithEqualsToken(Loretta.CodeAnalysis.SyntaxToken equalsToken) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
*REMOVED*Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.WithValues(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
*REMOVED*static Loretta.CodeAnalysis.Lua.SyntaxFactory.AssignmentStatement() -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
*REMOVED*static Loretta.CodeAnalysis.Lua.SyntaxFactory.AssignmentStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!> variables, Loretta.CodeAnalysis.SyntaxToken equalsToken, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
*REMOVED*static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement() -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
*REMOVED*static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
*REMOVED*static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement(Loretta.CodeAnalysis.SyntaxToken localKeyword, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names, Loretta.CodeAnalysis.SyntaxToken equalsToken, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.AddEqualsValuesValues(params Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax![]! items) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.EqualsValues.get -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.Update(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!> variables, Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! equalsValues, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax.WithEqualsValues(Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! equalsValues) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.AddValues(params Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax![]! items) -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.EqualsToken.get -> Loretta.CodeAnalysis.SyntaxToken
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.Update(Loretta.CodeAnalysis.SyntaxToken equalsToken, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.Values.get -> Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!>
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.WithEqualsToken(Loretta.CodeAnalysis.SyntaxToken equalsToken) -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.WithValues(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.AddEqualsValuesValues(params Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax![]! items) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.EqualsValues.get -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax?
Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.Update(Loretta.CodeAnalysis.SyntaxToken localKeyword, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names, Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax? equalsValues, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax.WithEqualsValues(Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax? equalsValues) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
Loretta.CodeAnalysis.Lua.SyntaxKind.EqualsValuesClause = 2083 -> Loretta.CodeAnalysis.Lua.SyntaxKind
override Loretta.CodeAnalysis.Lua.LuaSyntaxRewriter.VisitEqualsValuesClause(Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! node) -> Loretta.CodeAnalysis.SyntaxNode?
override Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.Accept(Loretta.CodeAnalysis.Lua.LuaSyntaxVisitor! visitor) -> void
override Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax.Accept<TResult>(Loretta.CodeAnalysis.Lua.LuaSyntaxVisitor<TResult>! visitor) -> TResult?
static Loretta.CodeAnalysis.Lua.SyntaxFactory.AssignmentStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!> variables = default(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!>)) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.AssignmentStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!> variables, Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! equalsValues, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.AssignmentStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.PrefixExpressionSyntax!> variables, Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! equalsValues) -> Loretta.CodeAnalysis.Lua.Syntax.AssignmentStatementSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.EqualsValuesClause(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values = default(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!>)) -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.EqualsValuesClause(Loretta.CodeAnalysis.SyntaxToken equalsToken, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names = default(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!>)) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names, Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax? equalsValues) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement(Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> variables, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.ExpressionSyntax!> values) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
static Loretta.CodeAnalysis.Lua.SyntaxFactory.LocalVariableDeclarationStatement(Loretta.CodeAnalysis.SyntaxToken localKeyword, Loretta.CodeAnalysis.SeparatedSyntaxList<Loretta.CodeAnalysis.Lua.Syntax.IdentifierNameSyntax!> names, Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax? equalsValues, Loretta.CodeAnalysis.SyntaxToken semicolonToken) -> Loretta.CodeAnalysis.Lua.Syntax.LocalVariableDeclarationStatementSyntax!
virtual Loretta.CodeAnalysis.Lua.LuaSyntaxVisitor.VisitEqualsValuesClause(Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! node) -> void
virtual Loretta.CodeAnalysis.Lua.LuaSyntaxVisitor<TResult>.VisitEqualsValuesClause(Loretta.CodeAnalysis.Lua.Syntax.EqualsValuesClauseSyntax! node) -> TResult?